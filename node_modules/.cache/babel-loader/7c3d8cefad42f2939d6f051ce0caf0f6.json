{"ast":null,"code":"// 初期State\nconst initialState = {\n  users: {\n    uid: 0,\n    timers: [{\n      id: 0,\n      name: '筋トレ',\n      interval: [40, 20, 10],\n      loop: 5\n    }]\n  }\n};\nconst initialTimer = {\n  id: 0,\n  name: '',\n  interval: [],\n  loop: 5\n}; // Reducer処理\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TIMER':\n      {\n        const newTimer = Object.assign({}, initialTimer);\n        const newTimers = state.users.timers;\n        newTimer.name = action.value.timerName; // idの付与\n\n        newTimer.id = newTimers.reduce((p, c) => p > c.id ? p : c.id, 0) + 1;\n        newTimers.push(newTimer);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'ADD_INTERVAL_TIMER':\n      {\n        const getTimers = state.users.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.interval.push(10);\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDATE_INTERVAL_TIMER':\n      {\n        const getTimers = state.users.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.interval[action.value.index] = action.value.intervalTime * 1;\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'DELTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'FETCHTODO':\n      {\n        return state;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/modules/reducer.js"],"names":["initialState","users","uid","timers","id","name","interval","loop","initialTimer","reducer","state","action","type","newTimer","Object","assign","newTimers","value","timerName","reduce","p","c","push","getTimers","getTimer","filter","t","timersId","map","index","intervalTime","console","log"],"mappings":"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","sourcesContent":["// 初期State\nconst initialState = {\n    users:\n      { \n        uid:0,        \n        timers:[\n          {\n            id:0,\n            name:'筋トレ',            \n            interval:[40,20,10],\n            loop:5\n          }\n        ]\n      }    \n  }\n\nconst initialTimer = { \n            id:0,\n            name:'',            \n            interval:[],\n            loop:5\n          }\n\n  // Reducer処理\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADD_TIMER': {\n        const newTimer = Object.assign({},initialTimer)\n        const newTimers = state.users.timers\n        newTimer.name = action.value.timerName  \n        // idの付与\n        newTimer.id = newTimers.reduce((p,c) => p > c.id ? p : c.id , 0) + 1\n        newTimers.push(newTimer)             \n        return { ...state, timers: newTimers }\n      }\n      case 'ADD_INTERVAL_TIMER': {\n        const getTimers = state.users.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]\n        getTimer.interval.push(10)\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)        \n        return { ...state, timers: newTimers }\n      }\n      case 'UPDATE_INTERVAL_TIMER': {        \n        const getTimers = state.users.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]\n        getTimer.interval[action.value.index] = action.value.intervalTime * 1        \n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)        \n        return { ...state, timers: newTimers }\n      }\n      case 'UPDTODO': {\n        return console.log(action.value)\n      }\n      case 'DELTODO': {\n        return console.log(action.value)\n      }\n      case 'FETCHTODO': {\n        return state\n      }\n      default: {\n        return state\n      }\n    }\n  }\n  \n  export default reducer"]},"metadata":{},"sourceType":"module"}