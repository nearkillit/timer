{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from '../modules/actions'; // component\n\nimport Timer from './timer'; // mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  waitTime: {\n    color: '#AAA',\n    backgroundColor: '#CCC',\n    transition: '1s'\n  },\n  startTime: {\n    transition: '1s'\n  }\n});\n\nfunction TimerView(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const state = useSelector(state => state);\n  const [start, setStart] = useState(-1);\n  const [stop, setStop] = useState(false);\n  const [timeCountDown, setTimeCountDown] = useState('');\n  const [intervalCountUp, setIntervalCountUp] = useState(false);\n  const getTimer = props.timer;\n  const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat());\n  const [loop, setLoop] = useState(getTimer.loop);\n  const [endTimer, setEndTimer] = useState(false);\n  const intervalTimerOrigin = getTimer.interval.concat();\n  let countDownTimer;\n  const audioIntervalNext = new Audio(`${process.env.PUBLIC_URL}/se/ホイッスル・単発.mp3`);\n  const audioIntervalEnd = new Audio(`${process.env.PUBLIC_URL}/se/ホイッスル・連続.mp3`);\n\n  const countDown = () => {\n    let getStart = start;\n\n    if (getStart === -1) {\n      setStart(0);\n      getStart = 0;\n    }\n\n    const newIntervalTimer = intervalTimer.concat();\n    newIntervalTimer[getStart] -= 1;\n    intervalTimer[getStart] -= 1; // 次のインターバルタイマーへ\n\n    if (newIntervalTimer[getStart] < 0) {\n      setStart(start => start + 1);\n      setIntervalTimer(() => intervalTimerOrigin.concat());\n      setIntervalCountUp(true);\n      audioIntervalNext.play().catch(err => console.log(err));\n    } // 次に行かない場合\n    else {\n      setIntervalTimer(() => newIntervalTimer);\n    }\n  }; // timer関連\n\n\n  const timerStart = () => {\n    setStop(false);\n    setEndTimer(false);\n    setIntervalCountUp(false);\n    dispatch(Actions.updateTimerStopFlag(false));\n    setStart(0);\n    timerCountDown();\n  };\n\n  const timerStop = () => {\n    setStop(true);\n    dispatch(Actions.updateTimerStopFlag(true));\n    clearInterval(timeCountDown);\n  };\n\n  const timerRestart = () => {\n    timerCountDown();\n    setEndTimer(false);\n  };\n\n  const timerReset = () => {\n    timerStop(); //　初期値        \n\n    setStart(-1);\n    setLoop(getTimer.loop);\n    setIntervalTimer(() => intervalTimerOrigin.concat());\n  };\n\n  const timerCountDown = () => {\n    setStop(false);\n    dispatch(Actions.updateTimerStopFlag(false)); // countDown系\n\n    countDown();\n    countDownTimer = setInterval(() => {\n      countDown();\n    }, 1000);\n    setTimeCountDown(countDownTimer);\n  }; // intervalTimerの更新\n\n\n  useEffect(() => {\n    setIntervalTimer(props.timer.interval.concat());\n    setLoop(props.timer.loop);\n  }, [props]);\n  useEffect(() => {\n    if (start >= intervalTimer.length) {\n      setStart(0);\n      setLoop(loop => loop - 1);\n\n      if (loop < 1) {\n        setEndTimer(true);\n        timerReset();\n      }\n    }\n  }, [start]);\n  useEffect(() => {\n    if (intervalCountUp && !endTimer) {\n      setIntervalCountUp(false);\n      timerStop();\n      timerCountDown();\n    }\n  }, [intervalCountUp]);\n  useEffect(() => {\n    if (endTimer) {\n      audioIntervalEnd.play().catch(err => console.log(err));\n    }\n  }, [endTimer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [intervalTimer.map((t, i) => i === start ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.startTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.waitTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)), endTimer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        children: \"\\u7D42\\u4E86\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      children: [\"\\u3042\\u3068\", loop, \"\\u5468\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), start > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [stop ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerRestart,\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStop,\n        children: \"\\u30B9\\u30C8\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerReset,\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStart,\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimerView, \"YgFIlx5qe0WBFiGExhDClFby5DM=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = TimerView;\nexport default TimerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js"],"names":["useParams","useSelector","useDispatch","useEffect","useState","makeStyles","Actions","Timer","Grid","Typography","Button","useStyles","root","textAlign","cardContents","waitTime","color","backgroundColor","transition","startTime","TimerView","props","dispatch","classes","state","start","setStart","stop","setStop","timeCountDown","setTimeCountDown","intervalCountUp","setIntervalCountUp","getTimer","timer","intervalTimer","setIntervalTimer","interval","concat","loop","setLoop","endTimer","setEndTimer","intervalTimerOrigin","countDownTimer","audioIntervalNext","Audio","process","env","PUBLIC_URL","audioIntervalEnd","countDown","getStart","newIntervalTimer","play","catch","err","console","log","timerStart","updateTimerStopFlag","timerCountDown","timerStop","clearInterval","timerRestart","timerReset","setInterval","length","map","t","i"],"mappings":"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","sourcesContent":["// react\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Actions from '../modules/actions'\n// component\nimport Timer from './timer'\n\n// mui\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',      \n    },\n    waitTime: {\n        color: '#AAA',\n        backgroundColor: '#CCC',\n        transition: '1s'\n    },\n    startTime: {\n        transition: '1s'\n    },\n  });\n\nfunction TimerView(props){\n    const dispatch = useDispatch();\n    const classes = useStyles();    \n    const state = useSelector(state => state)\n    const [start, setStart] = useState(-1)    \n    const [stop, setStop] = useState(false)\n    const [timeCountDown, setTimeCountDown] = useState('')\n    const [intervalCountUp, setIntervalCountUp] = useState(false)\n    const getTimer = props.timer\n    const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat())\n    const [loop, setLoop] = useState(getTimer.loop)\n    const [endTimer, setEndTimer] = useState(false)\n    const intervalTimerOrigin = getTimer.interval.concat()    \n    let countDownTimer\n    const audioIntervalNext = new Audio(`${process.env.PUBLIC_URL}/se/ホイッスル・単発.mp3`)\n    const audioIntervalEnd = new Audio(`${process.env.PUBLIC_URL}/se/ホイッスル・連続.mp3`)\n\n    const countDown = () => {      \n      let getStart = start\n      if(getStart === -1){        \n          setStart(0)\n          getStart = 0\n      }\n\n      const newIntervalTimer = intervalTimer.concat()\n      newIntervalTimer[getStart] -= 1\n      intervalTimer[getStart] -= 1\n      \n      // 次のインターバルタイマーへ\n      if(newIntervalTimer[getStart] < 0){             \n        setStart(start => start + 1)\n        setIntervalTimer(() => intervalTimerOrigin.concat())\n        setIntervalCountUp(true)        \n        audioIntervalNext.play().catch(err => console.log(err))\n      }\n      // 次に行かない場合\n      else{        \n        setIntervalTimer(() => newIntervalTimer)\n      }      \n    }\n\n    // timer関連\n    const timerStart = () => {\n      setStop(false)\n      setEndTimer(false)\n      setIntervalCountUp(false)\n      dispatch(Actions.updateTimerStopFlag(false))      \n      setStart(0)      \n      timerCountDown()      \n    }\n\n    const timerStop = () => {\n      setStop(true)\n      dispatch(Actions.updateTimerStopFlag(true))\n      clearInterval(timeCountDown)\n    }\n\n    const timerRestart = () => {\n      timerCountDown()\n      setEndTimer(false)\n    }\n\n    const timerReset = () => {\n        timerStop()\n        //　初期値        \n        setStart(-1)\n        setLoop(getTimer.loop)\n        setIntervalTimer(() => intervalTimerOrigin.concat())\n    }    \n\n    const timerCountDown = () => {        \n      setStop(false)\n      dispatch(Actions.updateTimerStopFlag(false))\n      // countDown系\n      countDown()      \n      countDownTimer = setInterval(() => {                \n        countDown()\n      }, 1000)\n      setTimeCountDown(countDownTimer)            \n    }        \n    \n\n    // intervalTimerの更新\n    useEffect(()=>{      \n      setIntervalTimer(props.timer.interval.concat())\n      setLoop(props.timer.loop)\n    },[props])\n\n    useEffect(()=>{        \n      if(start >= intervalTimer.length){        \n        setStart(0)\n        setLoop(loop => loop -1)\n        if(loop < 1){          \n          setEndTimer(true)\n          timerReset()\n        }\n      }      \n    },[start])\n\n    useEffect(()=>{      \n      if(intervalCountUp && !endTimer){\n        setIntervalCountUp(false)\n        timerStop()\n        timerCountDown()        \n      }\n    },[intervalCountUp])\n    \n    useEffect(()=>{\n      if(endTimer){\n        audioIntervalEnd.play().catch(err => console.log(err))        \n      }\n    },[endTimer])\n\n    return (\n        <div>          \n          {intervalTimer.map((t,i) => \n            i === start ?\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.startTime}>\n              {t}\n            </Typography>\n            :\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.waitTime}>\n              {t}\n            </Typography>\n            )}          \n          {endTimer ? \n            <>\n            <Typography variant=\"h5\" component=\"h5\" >\n              終了！\n            </Typography>            \n            </>\n            :\n            <Typography variant=\"h5\" component=\"h5\" >\n              あと{loop}周\n            </Typography>\n          }\n          {start > -1 ?                  \n            <div>\n              { stop ?\n                <Button onClick={timerRestart}>リスタート</Button>\n                :\n                <Button onClick={timerStop}>ストップ</Button>\n             }                            \n              <Button onClick={timerReset}>リセット</Button>\n            </div>     \n            :\n            <div>\n              <Button onClick={timerStart}>スタート</Button>\n            </div>                   \n          }                    \n        </div>    \n    )\n}\n\nexport default TimerView"]},"metadata":{},"sourceType":"module"}