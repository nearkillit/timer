{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // component\n\nimport Timer from './timer'; // mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  waitTime: {\n    color: '#AAA',\n    backgroundColor: '#CCC',\n    transition: '1s'\n  },\n  startTime: {\n    transition: '1s'\n  }\n});\n\nfunction TimerView(props) {\n  _s();\n\n  const classes = useStyles();\n  const state = useSelector(state => state);\n  const [start, setStart] = useState(-1);\n  let newStart = -1;\n  const [stop, setStop] = useState(false);\n  const [timeCountDown, setTimeCountDown] = useState('');\n  const getTimer = props.timer;\n  const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat());\n  const intervalTimerOrigin = getTimer.interval.concat();\n  let countDownTimer;\n\n  const countDown = () => {\n    console.log(newStart); //   intervalTimer[newStart] -= 1\n\n    setIntervalTimer();\n  }; // timer関連\n\n\n  const timerStart = () => {\n    setStop(false);\n    setStart(0);\n    newStart = 0;\n    timerCountDown(0);\n  };\n\n  const timerStop = () => {\n    setStop(true);\n    clearInterval(timeCountDown);\n  };\n\n  const timerRestart = () => {\n    setStop(false);\n    timerCountDown(start);\n  };\n\n  const timerReset = () => {};\n\n  const timerCountDown = () => {\n    countDown();\n    countDownTimer = setInterval(() => {\n      countDown();\n    }, 1000);\n    setTimeCountDown(countDownTimer);\n  };\n\n  useEffect(() => {\n    if (start > intervalTimer.length) {\n      setStart(0);\n      newStart = 0;\n    }\n  }, [start]);\n  useEffect(() => {\n    if (intervalTimer[start] < 0) {\n      setIntervalTimer(intervalTimerOrigin);\n      setStart(start + 1);\n      newStart = start + 1;\n    }\n  }, [intervalTimer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [intervalTimer.map((t, i) => i === start ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.startTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.waitTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      children: [\"\\u3042\\u3068\", getTimer.loop, \"\\u5468\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this), start > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [stop ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerRestart,\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStop,\n        children: \"\\u30B9\\u30C8\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStart,\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimerView, \"VVPffNynfCbuOimJzEVXkn0dwwA=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TimerView;\nexport default TimerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js"],"names":["useParams","useSelector","useDispatch","useEffect","useState","makeStyles","Timer","Grid","Typography","Button","useStyles","root","textAlign","cardContents","waitTime","color","backgroundColor","transition","startTime","TimerView","props","classes","state","start","setStart","newStart","stop","setStop","timeCountDown","setTimeCountDown","getTimer","timer","intervalTimer","setIntervalTimer","interval","concat","intervalTimerOrigin","countDownTimer","countDown","console","log","timerStart","timerCountDown","timerStop","clearInterval","timerRestart","timerReset","setInterval","length","map","t","i","loop"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GADmB;AAIzBC,EAAAA,YAAY,EAAE;AACZD,IAAAA,SAAS,EAAE;AADC,GAJW;AAOzBE,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,eAAe,EAAE,MAFX;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAPe;AAYzBC,EAAAA,SAAS,EAAE;AACPD,IAAAA,UAAU,EAAE;AADL;AAZc,CAAD,CAA5B;;AAiBA,SAASE,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACrB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,KAAK,GAAGrB,WAAW,CAACqB,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAC,CAAF,CAAlC;AACA,MAAIqB,QAAQ,GAAG,CAAC,CAAhB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM0B,QAAQ,GAAGV,KAAK,CAACW,KAAvB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAC0B,QAAQ,CAACI,QAAT,CAAkBC,MAAlB,EAAD,CAAlD;AACA,QAAMC,mBAAmB,GAAGN,QAAQ,CAACI,QAAT,CAAkBC,MAAlB,EAA5B;AACA,MAAIE,cAAJ;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ,EADsB,CAExB;;AACEQ,IAAAA,gBAAgB;AACjB,GAJD,CAZqB,CAkBrB;;;AACA,QAAMQ,UAAU,GAAG,MAAM;AACvBd,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAH,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACAiB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GALD;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACtBhB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAiB,IAAAA,aAAa,CAAChB,aAAD,CAAb;AACD,GAHD;;AAKA,QAAMiB,YAAY,GAAG,MAAM;AACzBlB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAe,IAAAA,cAAc,CAACnB,KAAD,CAAd;AACD,GAHD;;AAKA,QAAMuB,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMJ,cAAc,GAAG,MAAM;AAE3BJ,IAAAA,SAAS;AACTD,IAAAA,cAAc,GAAGU,WAAW,CAAC,MAAM;AACjCT,MAAAA,SAAS;AACV,KAF2B,EAEzB,IAFyB,CAA5B;AAGAT,IAAAA,gBAAgB,CAACQ,cAAD,CAAhB;AAED,GARD;;AAUAlC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGoB,KAAK,GAAGS,aAAa,CAACgB,MAAzB,EAAgC;AAC9BxB,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,MAAAA,QAAQ,GAAG,CAAX;AACD;AACF,GALQ,EAKP,CAACF,KAAD,CALO,CAAT;AAOApB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG6B,aAAa,CAACT,KAAD,CAAb,GAAuB,CAA1B,EAA4B;AACxBU,MAAAA,gBAAgB,CAACG,mBAAD,CAAhB;AACAZ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAE,MAAAA,QAAQ,GAAGF,KAAK,GAAG,CAAnB;AACH;AACF,GANQ,EAMP,CAACS,aAAD,CANO,CAAT;AAQA,sBACI;AAAA,eACGA,aAAa,CAACiB,GAAd,CAAkB,CAACC,CAAD,EAAGC,CAAH,KACjBA,CAAC,KAAK5B,KAAN,gBACA,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAgD,MAAA,SAAS,EAAEF,OAAO,CAACH,SAAnE;AAAA,gBACGgC;AADH,OAA6CC,CAA7C;AAAA;AAAA;AAAA;AAAA,YADA,gBAKA,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAgD,MAAA,SAAS,EAAE9B,OAAO,CAACP,QAAnE;AAAA,gBACGoC;AADH,OAA6CC,CAA7C;AAAA;AAAA;AAAA;AAAA,YAND,CADH,eAWE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA,iCACKrB,QAAQ,CAACsB,IADd;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAcG7B,KAAK,GAAG,CAAC,CAAT,gBACC;AAAA,iBACIG,IAAI,gBACJ,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEmB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,gBAGJ,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAUC;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAhGQtB,S;UACWT,S,EACFT,W;;;KAFTkB,S;AAkGT,eAAeA,SAAf","sourcesContent":["// react\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// component\nimport Timer from './timer'\n\n// mui\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',      \n    },\n    waitTime: {\n        color: '#AAA',\n        backgroundColor: '#CCC',\n        transition: '1s'\n    },\n    startTime: {\n        transition: '1s'\n    },\n  });\n\nfunction TimerView(props){\n    const classes = useStyles();    \n    const state = useSelector(state => state)\n    const [start, setStart] = useState(-1)\n    let newStart = -1\n    const [stop, setStop] = useState(false)\n    const [timeCountDown, setTimeCountDown] = useState('')    \n    const getTimer = props.timer\n    const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat())\n    const intervalTimerOrigin = getTimer.interval.concat()\n    let countDownTimer\n\n    const countDown = () => {\n      console.log(newStart)      \n    //   intervalTimer[newStart] -= 1\n      setIntervalTimer()      \n    }\n\n    // timer関連\n    const timerStart = () => {\n      setStop(false)\n      setStart(0)\n      newStart = 0\n      timerCountDown(0)      \n    }\n\n    const timerStop = () => {\n      setStop(true)\n      clearInterval(timeCountDown)\n    }\n\n    const timerRestart = () => {        \n      setStop(false)\n      timerCountDown(start)\n    }\n\n    const timerReset = () => {\n        \n    }    \n\n    const timerCountDown = () => {\n\n      countDown()\n      countDownTimer = setInterval(() => {                \n        countDown()\n      }, 1000)\n      setTimeCountDown(countDownTimer)\n            \n    }    \n\n    useEffect(()=>{      \n      if(start > intervalTimer.length){\n        setStart(0)\n        newStart = 0\n      }      \n    },[start])\n\n    useEffect(()=>{\n      if(intervalTimer[start] < 0){\n          setIntervalTimer(intervalTimerOrigin)\n          setStart(start + 1)\n          newStart = start + 1\n      }      \n    },[intervalTimer])\n\n    return (\n        <div>\n          {intervalTimer.map((t,i) => \n            i === start ?\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.startTime}>\n              {t}\n            </Typography>\n            :\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.waitTime}>\n              {t}\n            </Typography>\n            )}          \n          <Typography variant=\"h5\" component=\"h5\" >\n            あと{getTimer.loop}周\n          </Typography>\n          {start > -1 ?                  \n            <div>\n              { stop ?\n                <Button onClick={timerRestart}>リスタート</Button>\n                :\n                <Button onClick={timerStop}>ストップ</Button>\n             }                            \n              <Button>リセット</Button>\n            </div>     \n            :\n            <div>\n              <Button onClick={timerStart}>スタート</Button>\n            </div>                   \n          }                    \n        </div>    \n    )\n}\n\nexport default TimerView"]},"metadata":{},"sourceType":"module"}