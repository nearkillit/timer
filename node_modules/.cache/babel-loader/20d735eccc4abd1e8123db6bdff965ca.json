{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions';\nimport { useHistory } from 'react-router-dom';\nimport Blind from './timer_blind'; // mui\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; // mui icon\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center',\n    position: 'relative'\n  },\n  add: {\n    fontSize: '80%'\n  }\n});\n\nfunction Timer(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const timersId = props.timer.id;\n  const history = useHistory();\n\n  const handleLink = path => history.push(path); // const audio = new Audio(\"frontend/public/se/Onmtp-Ding05-1.mp3\") \n  // audio.play()\n\n\n  const inputIntervalTime = event => {\n    const intervalTime = event.target.value.replace(/\\D/g, '');\n    if (intervalTime.length > 5) return;\n    const index = event.target.name * 1;\n    dispatch(Actions.updateIntervalTimer({\n      intervalTime,\n      index,\n      timersId\n    }));\n  };\n\n  const addIntervalTimer = () => {\n    dispatch(Actions.addIntervalTimer({\n      timersId\n    }));\n  };\n\n  const deleteIntervalTimer = index => {\n    console.log(index);\n    dispatch(Actions.deleteIntervalTimer({\n      index,\n      timersId\n    }));\n  };\n\n  const inputLoop = event => {\n    const loop = event.target.value.replace(/\\D/g, '');\n    if (loop.length > 3) return;\n    dispatch(Actions.updateLoop({\n      loop,\n      timersId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cardContents,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Blind, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        children: props.timer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [props.timer.interval.map((t, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: t,\n                onChange: inputIntervalTime,\n                name: \"0\" + i,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: \"\\u79D2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 29\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => deleteIntervalTimer(i),\n                children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addIntervalTimer,\n                className: classes.add,\n                children: [/*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this), \"\\u8FFD\\u52A0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: props.timer.loop,\n        onChange: inputLoop,\n        InputProps: {\n          // startAdornment: \n          // <InputAdornment position=\"start\">LOOP数</InputAdornment>,\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: \"\\u56DE\\u7E70\\u308A\\u8FD4\\u3059\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleLink('/timerdetail/' + timersId),\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"aQ5m8VIbF+ezJbrYLKbddNLb2bQ=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js"],"names":["useSelector","useDispatch","Actions","useHistory","Blind","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","InputAdornment","Card","CardActions","CardContent","makeStyles","Typography","TextField","Button","IconButton","ControlPointIcon","ClearIcon","CancelIcon","useStyles","root","textAlign","cardContents","position","add","fontSize","Timer","props","classes","dispatch","timersId","timer","id","history","handleLink","path","push","inputIntervalTime","event","intervalTime","target","value","replace","length","index","name","updateIntervalTimer","addIntervalTimer","deleteIntervalTimer","console","log","inputLoop","loop","updateLoop","interval","map","t","i","endAdornment"],"mappings":"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","sourcesContent":["// react\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions'\nimport { useHistory } from 'react-router-dom'\nimport Blind from './timer_blind'\n// mui\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n// mui icon\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',\n      position: 'relative',      \n    },    \n    add: {\n      fontSize: '80%',      \n    }\n  });\n\nfunction Timer (props){\n    const classes = useStyles();    \n    const dispatch = useDispatch();\n    const timersId = props.timer.id\n    const history = useHistory();\n    const handleLink = path => history.push(path)    \n    // const audio = new Audio(\"frontend/public/se/Onmtp-Ding05-1.mp3\") \n    // audio.play()\n\n    const inputIntervalTime = (event) => {\n      const intervalTime = event.target.value.replace(/\\D/g, '')\n      if(intervalTime.length > 5) return \n      const index = event.target.name * 1\n      dispatch(Actions.updateIntervalTimer({intervalTime, index, timersId}))\n    }\n\n    const addIntervalTimer = () => {\n      dispatch(Actions.addIntervalTimer({timersId}))\n    }\n\n    const deleteIntervalTimer = (index) => {\n      console.log(index);\n      dispatch(Actions.deleteIntervalTimer({index, timersId}))\n    }\n\n    const inputLoop = (event) => {\n      const loop = event.target.value.replace(/\\D/g, '')\n      if(loop.length > 3) return \n      dispatch(Actions.updateLoop({loop, timersId}))\n    }        \n\n    return (\n        <Card className={classes.cardContents}>\n            <CardContent>\n              <Blind />\n              <Typography variant=\"h5\" component=\"h5\">\n                {props.timer.name}\n              </Typography>              \n              <Table>\n                <TableBody>\n                  {props.timer.interval.map((t,i) => (\n                    <TableRow key={i}>\n                      <TableCell>{i}</TableCell>\n                      <TableCell>\n                        <TextField value={t} onChange={inputIntervalTime} name={\"0\" + i}\n                          InputProps={{\n                            endAdornment: \n                            <InputAdornment position=\"end\">秒</InputAdornment>\n                        }}/>\n                      </TableCell>\n                      <TableCell>\n                      <IconButton onClick={ () => deleteIntervalTimer(i)}><CancelIcon /></IconButton>\n                      </TableCell>\n                  </TableRow>\n                  ))}\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>\n                      <Button onClick={addIntervalTimer} className={classes.add}>\n                        <ControlPointIcon />追加\n                      </Button>\n                    </TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <TextField value={props.timer.loop} onChange={inputLoop}\n                          InputProps={{\n                            // startAdornment: \n                            // <InputAdornment position=\"start\">LOOP数</InputAdornment>,\n                            endAdornment:\n                            <InputAdornment position=\"end\">回繰り返す</InputAdornment>\n                        }}/>\n              <Button onClick={()=>handleLink('/timerdetail/' + timersId)}>スタート</Button>\n            </CardContent>\n          </Card>          \n        )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}