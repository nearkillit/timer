{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // component\n\nimport Timer from './timer'; // mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  waitTime: {\n    color: '#AAA',\n    backgroundColor: '#CCC',\n    transition: '1s'\n  },\n  startTime: {\n    transition: '1s'\n  }\n});\n\nfunction TimerView(props) {\n  _s();\n\n  const classes = useStyles();\n  const state = useSelector(state => state);\n  const [start, setStart] = useState(-1);\n  const [stop, setStop] = useState(false);\n  const [timeCountDown, setTimeCountDown] = useState('');\n  const [intervalCountUp, setIntervalCountUp] = useState(false);\n  const getTimer = props.timer;\n  const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat());\n  const intervalTimerOrigin = getTimer.interval.concat();\n  let countDownTimer;\n\n  const countDown = () => {\n    // startが1つ遅れてくるので1を足す \n    let getStart = start + 1;\n    if (getStart === -1) getStart = 0;\n    intervalTimer[getStart] -= 1; // 次のインターバルタイマーへ\n\n    if (intervalTimer[getStart] < 0) {\n      setIntervalCountUp(true);\n      setIntervalTimer(intervalTimerOrigin.concat());\n      setStart(start => start + 1);\n    } // 次に行かない場合\n    else {\n      setIntervalTimer(intervalTimer.concat());\n    }\n  }; // timer関連\n\n\n  const timerStart = () => {\n    setStop(false);\n    setStart(start => start + 1);\n    timerCountDown();\n  };\n\n  const timerStop = () => {\n    setStop(true);\n    clearInterval(timeCountDown);\n  };\n\n  const timerRestart = () => {\n    timerCountDown();\n  };\n\n  const timerReset = () => {};\n\n  const timerCountDown = () => {\n    setStop(false);\n    countDown();\n    countDownTimer = setInterval(() => {\n      countDown();\n    }, 1000);\n    setTimeCountDown(countDownTimer);\n  };\n\n  useEffect(() => {\n    if (start >= intervalTimer.length) {\n      console.log('check');\n      setStart(0);\n    }\n  }, [start]);\n  useEffect(() => {\n    console.log(intervalTimer);\n  }, [intervalTimer]);\n  useEffect(() => {\n    if (intervalCountUp) {\n      setIntervalCountUp(false);\n      console.log(start);\n      timerStop();\n      timerCountDown();\n    }\n  }, [intervalCountUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [intervalTimer.map((t, i) => i === start ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.startTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.waitTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      children: [\"\\u3042\\u3068\", getTimer.loop, \"\\u5468\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), start > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [stop ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerRestart,\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStop,\n        children: \"\\u30B9\\u30C8\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStart,\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimerView, \"NTPN4RKTQIwOQ++dtzn8PfG/bek=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TimerView;\nexport default TimerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js"],"names":["useParams","useSelector","useDispatch","useEffect","useState","makeStyles","Timer","Grid","Typography","Button","useStyles","root","textAlign","cardContents","waitTime","color","backgroundColor","transition","startTime","TimerView","props","classes","state","start","setStart","stop","setStop","timeCountDown","setTimeCountDown","intervalCountUp","setIntervalCountUp","getTimer","timer","intervalTimer","setIntervalTimer","interval","concat","intervalTimerOrigin","countDownTimer","countDown","getStart","timerStart","timerCountDown","timerStop","clearInterval","timerRestart","timerReset","setInterval","length","console","log","map","t","i","loop"],"mappings":"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","sourcesContent":["// react\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// component\nimport Timer from './timer'\n\n// mui\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',      \n    },\n    waitTime: {\n        color: '#AAA',\n        backgroundColor: '#CCC',\n        transition: '1s'\n    },\n    startTime: {\n        transition: '1s'\n    },\n  });\n\nfunction TimerView(props){\n    const classes = useStyles();    \n    const state = useSelector(state => state)\n    const [start, setStart] = useState(-1)    \n    const [stop, setStop] = useState(false)\n    const [timeCountDown, setTimeCountDown] = useState('')\n    const [intervalCountUp, setIntervalCountUp] = useState(false)\n    const getTimer = props.timer\n    const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat())\n    const intervalTimerOrigin = getTimer.interval.concat()\n    let countDownTimer\n\n    const countDown = () => {\n      // startが1つ遅れてくるので1を足す \n      let getStart = start + 1\n      if(getStart === -1) getStart = 0              \n      intervalTimer[getStart] -= 1\n      \n      // 次のインターバルタイマーへ\n      if(intervalTimer[getStart] < 0){\n        setIntervalCountUp(true)\n        setIntervalTimer(intervalTimerOrigin.concat()) \n        setStart(start => start + 1)\n      }\n      // 次に行かない場合\n      else{        \n        setIntervalTimer(intervalTimer.concat())       \n      }      \n    }\n\n    // timer関連\n    const timerStart = () => {\n      setStop(false)\n      setStart(start => start + 1)      \n      timerCountDown()      \n    }\n\n    const timerStop = () => {\n      setStop(true)\n      clearInterval(timeCountDown)\n    }\n\n    const timerRestart = () => {\n      timerCountDown()\n    }\n\n    const timerReset = () => {\n        \n    }    \n\n    const timerCountDown = () => {        \n\n      setStop(false)\n      countDown()      \n      countDownTimer = setInterval(() => {                \n        countDown()\n      }, 1000)\n      setTimeCountDown(countDownTimer)\n            \n    }        \n\n    useEffect(()=>{      \n      if(start >= intervalTimer.length){\n        console.log('check');\n        setStart(0)        \n      }      \n    },[start])\n\n    useEffect(()=>{\n      console.log(intervalTimer);\n    },[intervalTimer])\n\n    useEffect(()=>{\n      if(intervalCountUp){\n        setIntervalCountUp(false)\n        console.log(start);\n        timerStop()          \n        timerCountDown()        \n      }\n    },[intervalCountUp])\n\n    return (\n        <div>          \n          {intervalTimer.map((t,i) => \n            i === start ?\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.startTime}>\n              {t}\n            </Typography>\n            :\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.waitTime}>\n              {t}\n            </Typography>\n            )}          \n          <Typography variant=\"h5\" component=\"h5\" >\n            あと{getTimer.loop}周\n          </Typography>\n          {start > -1 ?                  \n            <div>\n              { stop ?\n                <Button onClick={timerRestart}>リスタート</Button>\n                :\n                <Button onClick={timerStop}>ストップ</Button>\n             }                            \n              <Button>リセット</Button>\n            </div>     \n            :\n            <div>\n              <Button onClick={timerStart}>スタート</Button>\n            </div>                   \n          }                    \n        </div>    \n    )\n}\n\nexport default TimerView"]},"metadata":{},"sourceType":"module"}