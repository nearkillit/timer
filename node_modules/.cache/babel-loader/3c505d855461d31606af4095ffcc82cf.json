{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_list.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions';\nimport { useState } from \"react\"; // react\n\nimport { useHistory // useParams,  \n} from 'react-router-dom'; // component\n\nimport Timer from './timer'; // mui\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'; // material ui のスタイルの指定https://qiita.com/uehaj/items/969ef20ccef850d2e9b1\n// material ui gridの作成　https://qiita.com/vimyum/items/5ba06ca166ebe4992617\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  }\n});\n\nfunction TimerList() {\n  _s();\n\n  // const history = useHistory();\n  // const handleLink = path => history.push(path)\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [timerName, setTimerName] = useState(\"\");\n  const classes = useStyles();\n\n  const getTimerName = e => {\n    setTimerName(e.target.value);\n  };\n\n  const addTimer = () => {\n    dispatch(Actions.addTimer({\n      timerName\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u30BF\\u30A4\\u30DE\\u30FC\\u540D\",\n      variant: \"outlined\",\n      onChange: getTimerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addTimer,\n      children: \"\\u8FFD\\u52A0\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: state.users.timers.map(t => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          timer: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerList, \"QTCyFj+CTyLO5u9MzSjmcgH48JM=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = TimerList;\nexport default TimerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerList\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_list.js"],"names":["useSelector","useDispatch","Actions","useState","useHistory","Timer","Typography","Button","makeStyles","TextField","Grid","useStyles","root","textAlign","cardContents","TimerList","dispatch","state","timerName","setTimerName","classes","getTimerName","e","target","value","addTimer","users","timers","map","t"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SACEC,UADF,CAEE;AAFF,OAGO,kBAHP,C,CAKA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CAGA;AACA;;;AACA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GADqB;AAI3BC,EAAAA,YAAY,EAAE;AACZD,IAAAA,SAAS,EAAE;AADC;AAJa,CAAD,CAA5B;;AASA,SAASE,SAAT,GAAoB;AAAA;;AAClB;AACA;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,KAAK,GAAGjB,WAAW,CAACiB,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMiB,OAAO,GAAGT,SAAS,EAAzB;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBT,IAAAA,QAAQ,CAACd,OAAO,CAACuB,QAAR,CAAiB;AAACP,MAAAA;AAAD,KAAjB,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,gCAAjB;AAAyB,MAAA,OAAO,EAAC,UAAjC;AAA6C,MAAA,QAAQ,EAAEG;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACIR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,GAAnB,CAAuBC,CAAC,iBACxB,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7BQd,S;UAGUd,W,EACHD,W,EAEEW,S;;;KANTI,S;AA+BT,eAAeA,SAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions'\nimport { useState } from \"react\";\n// react\nimport {\n  useHistory\n  // useParams,  \n} from 'react-router-dom'\n\n// component\nimport Timer from './timer'\n\n// mui\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n\n// material ui のスタイルの指定https://qiita.com/uehaj/items/969ef20ccef850d2e9b1\n// material ui gridの作成　https://qiita.com/vimyum/items/5ba06ca166ebe4992617\nconst useStyles = makeStyles({\n  root: {    \n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center',    \n  }\n});\n\nfunction TimerList(){\n  // const history = useHistory();\n  // const handleLink = path => history.push(path)\n  const dispatch = useDispatch();\n  const state = useSelector(state => state)\n  const [timerName, setTimerName] = useState(\"\")\n  const classes = useStyles();\n\n  const getTimerName = (e) => {\n    setTimerName(e.target.value)\n  }\n\n  const addTimer = () => {\n    dispatch(Actions.addTimer({timerName}))\n  }\n\n  return (\n    <div>\n      <TextField label=\"タイマー名\" variant=\"outlined\"  onChange={getTimerName} />\n      <Button onClick={addTimer}>追加する</Button>\n      <Grid container spacing={1}>\n        { state.users.timers.map(t => (\n          <Grid item xs={4}>\n            <Timer timer={t}/>   \n          </Grid>\n        ))}        \n      </Grid>      \n    </div>\n  )\n}\n\nexport default TimerList"]},"metadata":{},"sourceType":"module"}