{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_list.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions';\nimport { useState } from \"react\"; // component\n\nimport Timer from './timer'; // mui\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear'; // material ui のスタイルの指定https://qiita.com/uehaj/items/969ef20ccef850d2e9b1\n// material ui gridの作成　https://qiita.com/vimyum/items/5ba06ca166ebe4992617\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  timer: {\n    position: 'relative'\n  },\n  cancel: {\n    position: 'absolute',\n    top: '0%',\n    left: '80%',\n    zIndex: '2'\n  }\n});\n\nfunction TimerList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [timerName, setTimerName] = useState(\"\");\n  const classes = useStyles();\n\n  const getTimerName = e => {\n    setTimerName(e.target.value);\n  };\n\n  const addTimer = () => {\n    dispatch(Actions.addTimer({\n      timerName\n    }));\n  };\n\n  const deleteTimer = timersId => {\n    dispatch(Actions.deleteTimer({\n      timersId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.timers.length < 9 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\u30BF\\u30A4\\u30DE\\u30FC\\u540D\",\n        variant: \"outlined\",\n        inputProps: {\n          maxLength: \"16\"\n        },\n        onChange: getTimerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addTimer,\n        children: \"\\u8FFD\\u52A0\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"10\\u3064\\u4EE5\\u4E0A\\u306E\\u30BF\\u30A4\\u30DE\\u30FC\\u306E\\u4F5C\\u6210\\u306B\\u306F\\u30D7\\u30EC\\u30DF\\u30A2\\u30E0\\u30D7\\u30E9\\u30F3\\u304C\\u5FC5\\u8981\\u3067\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: state.timers.map((t, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.timer,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.cancel,\n          onClick: () => deleteTimer(t.id),\n          children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          timer: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimerList, \"QTCyFj+CTyLO5u9MzSjmcgH48JM=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = TimerList;\nexport default TimerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerList\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_list.js"],"names":["useSelector","useDispatch","Actions","useState","Timer","Button","makeStyles","TextField","Grid","IconButton","ClearIcon","useStyles","root","textAlign","cardContents","timer","position","cancel","top","left","zIndex","TimerList","dispatch","state","timerName","setTimerName","classes","getTimerName","e","target","value","addTimer","deleteTimer","timersId","timers","length","maxLength","map","t","i","id"],"mappings":"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","sourcesContent":["// react\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions'\nimport { useState } from \"react\";\n\n// component\nimport Timer from './timer'\n\n// mui\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\n// material ui のスタイルの指定https://qiita.com/uehaj/items/969ef20ccef850d2e9b1\n// material ui gridの作成　https://qiita.com/vimyum/items/5ba06ca166ebe4992617\nconst useStyles = makeStyles({\n  root: {    \n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center',    \n  },\n  timer: {\n    position: 'relative',\n  },\n  cancel: {\n    position: 'absolute',\n    top: '0%',\n    left: '80%',\n    zIndex: '2',\n  },\n});\n\nfunction TimerList(){\n  const dispatch = useDispatch();\n  const state = useSelector(state => state)\n  const [timerName, setTimerName] = useState(\"\")\n  const classes = useStyles();\n\n  const getTimerName = (e) => {\n    setTimerName(e.target.value)\n  }\n\n  const addTimer = () => {\n    dispatch(Actions.addTimer({timerName}))\n  }\n\n  const deleteTimer = (timersId) => {    \n    dispatch(Actions.deleteTimer({timersId}))\n  }\n\n  return (\n    <div>\n      {state.timers.length < 9 ?\n        <>\n          <TextField label=\"タイマー名\" variant=\"outlined\" inputProps={{ maxLength: \"16\" }} onChange={getTimerName} />\n          <Button onClick={addTimer}>追加する</Button>\n        </>\n        :\n        <span>10つ以上のタイマーの作成にはプレミアムプランが必要です</span>\n      }      \n      <Grid container spacing={1}>\n        { state.timers.map((t,i) => (\n          <Grid item xs={4} key={i} className={classes.timer}>\n            <IconButton className={classes.cancel} onClick={ () => deleteTimer(t.id)}>\n              <ClearIcon />\n            </IconButton>\n            <Timer timer={t}/>   \n          </Grid>\n        ))}        \n      </Grid>      \n    </div>\n  )\n}\n\nexport default TimerList"]},"metadata":{},"sourceType":"module"}