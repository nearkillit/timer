{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js\",\n    _s = $RefreshSig$();\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions';\nimport { useHistory // useParams,\n} from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  }\n});\n\nfunction Timer(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const timersId = props.timer.id;\n  const history = useHistory();\n\n  const handleLink = path => history.push(path);\n\n  const inputIntervalTime = event => {\n    const intervalTime = event.target.value.replace(/\\D/g, '');\n    if (intervalTime.length > 5) return;\n    const index = event.target.name * 1;\n    dispatch(Actions.updateIntervalTimer({\n      intervalTime,\n      index,\n      timersId\n    }));\n  };\n\n  const addIntervalTimer = () => {\n    dispatch(Actions.addIntervalTimer({\n      timersId\n    }));\n  };\n\n  const inputLoop = event => {\n    const loop = event.target.value.replace(/\\D/g, '');\n    if (loop.length > 3) return;\n    dispatch(Actions.updateLoop({\n      loop,\n      timersId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cardContents,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        children: props.timer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [props.timer.interval.map((t, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: t,\n                onChange: inputIntervalTime,\n                name: \"0\" + i,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: \"\\u79D2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 29\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addIntervalTimer,\n                children: [/*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 58\n                }, this), \"\\u8FFD\\u52A0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: props.timer.loop,\n        onChange: inputLoop,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: \"\\u7E70\\u308A\\u8FD4\\u3057\\u56DE\\u6570\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this),\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: \"\\u56DE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleLink('/timerdetail/' + timersId),\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"aQ5m8VIbF+ezJbrYLKbddNLb2bQ=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","InputAdornment","Card","CardActions","CardContent","makeStyles","Typography","TextField","Button","IconButton","ControlPointIcon","useSelector","useDispatch","Actions","useHistory","useStyles","root","textAlign","cardContents","Timer","props","classes","dispatch","timersId","timer","id","history","handleLink","path","push","inputIntervalTime","event","intervalTime","target","value","replace","length","index","name","updateIntervalTimer","addIntervalTimer","inputLoop","loop","updateLoop","interval","map","t","i","endAdornment","startAdornment"],"mappings":"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","sourcesContent":["import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions'\nimport {\n  useHistory\n  // useParams,\n} from 'react-router-dom'\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',    \n    }\n  });\n\nfunction Timer (props){\n    const classes = useStyles();    \n    const dispatch = useDispatch();\n    const timersId = props.timer.id\n    const history = useHistory();\n    const handleLink = path => history.push(path)  \n\n    const inputIntervalTime = (event) => {\n      const intervalTime = event.target.value.replace(/\\D/g, '')\n      if(intervalTime.length > 5) return \n      const index = event.target.name * 1\n      dispatch(Actions.updateIntervalTimer({intervalTime, index, timersId}))\n    }\n\n    const addIntervalTimer = () => {\n      dispatch(Actions.addIntervalTimer({timersId}))\n    }\n\n    const inputLoop = (event) => {\n      const loop = event.target.value.replace(/\\D/g, '')\n      if(loop.length > 3) return \n      dispatch(Actions.updateLoop({loop, timersId}))\n    }\n\n    return (\n        <Card className={classes.cardContents}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h5\">\n                {props.timer.name}\n              </Typography>\n              <Table>\n                <TableBody>\n                  {props.timer.interval.map((t,i) => (\n                    <TableRow key={i}>\n                      <TableCell>{i}</TableCell>\n                      <TableCell>\n                        <TextField value={t} onChange={inputIntervalTime} name={\"0\" + i}\n                          InputProps={{\n                            endAdornment: \n                            <InputAdornment position=\"end\">秒</InputAdornment>\n                        }}/>\n                      </TableCell>\n                  </TableRow>\n                  ))}\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>\n                      <Button onClick={addIntervalTimer}><ControlPointIcon />追加</Button>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <TextField value={props.timer.loop} onChange={inputLoop}\n                          InputProps={{\n                            startAdornment: \n                            <InputAdornment position=\"start\">繰り返し回数</InputAdornment>,\n                            endAdornment:\n                            <InputAdornment position=\"end\">回</InputAdornment>\n                        }}/>\n              <Button onClick={()=>handleLink('/timerdetail/' + timersId)}>スタート</Button>\n            </CardContent>\n          </Card>          \n        )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}