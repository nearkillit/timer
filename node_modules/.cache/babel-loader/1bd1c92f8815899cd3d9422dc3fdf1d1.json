{"ast":null,"code":"// 初期State\nconst initialState = {\n  todos: [{\n    created_at: '000',\n    updated_at: '000',\n    id: 1,\n    todo: \"test\"\n  }]\n}; // Reducer処理\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADDTODO':\n      {\n        const newTodos = state.todos;\n        const newTodo = {\n          todo: action.value.todo\n        };\n        newTodo.id = state.todos.reduce((a, c) => a.id > c.id ? a.id : c.id, {\n          id: 0\n        }) + 1;\n        newTodo.created_at = '作成';\n        newTodo.updated_at = '更新';\n        newTodos.push(newTodo);\n        return { ...state,\n          todos: newTodos\n        };\n      }\n\n    case 'UPDTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'DELTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'FETCHTODO':\n      {\n        return { ...state,\n          todos: action.value.todos\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/modules/reducer.js"],"names":["initialState","todos","created_at","updated_at","id","todo","reducer","state","action","type","newTodos","newTodo","value","reduce","a","c","push","console","log"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,UAAU,EAAC,KAAb;AAAoBC,IAAAA,UAAU,EAAC,KAA/B;AAAsCC,IAAAA,EAAE,EAAC,CAAzC;AAA4CC,IAAAA,IAAI,EAAC;AAAjD,GAAD;AADU,CAArB,C,CAGE;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AAAgB;AACd,cAAMC,QAAQ,GAAGH,KAAK,CAACN,KAAvB;AACA,cAAMU,OAAO,GAAG;AAAEN,UAAAA,IAAI,EAAEG,MAAM,CAACI,KAAP,CAAaP;AAArB,SAAhB;AACAM,QAAAA,OAAO,CAACP,EAAR,GAAaG,KAAK,CAACN,KAAN,CAAYY,MAAZ,CAAoB,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACV,EAAF,GAAOW,CAAC,CAACX,EAAT,GAAcU,CAAC,CAACV,EAAhB,GAAqBW,CAAC,CAACX,EAArD,EAA0D;AAAEA,UAAAA,EAAE,EAAC;AAAL,SAA1D,IAAsE,CAAnF;AACAO,QAAAA,OAAO,CAACT,UAAR,GAAqB,IAArB;AACAS,QAAAA,OAAO,CAACR,UAAR,GAAqB,IAArB;AACAO,QAAAA,QAAQ,CAACM,IAAT,CAAcL,OAAd;AACA,eAAO,EAAE,GAAGJ,KAAL;AAAYN,UAAAA,KAAK,EAAES;AAAnB,SAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,eAAOO,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACI,KAAnB,CAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,eAAOK,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACI,KAAnB,CAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGL,KAAL;AAAYN,UAAAA,KAAK,EAAEO,MAAM,CAACI,KAAP,CAAaX;AAAhC,SAAP;AACD;;AACD;AAAS;AACP,eAAOM,KAAP;AACD;AArBH;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["// 初期State\nconst initialState = {\n    todos: [{ created_at:'000', updated_at:'000', id:1, todo:\"test\"}],    \n  }\n  // Reducer処理\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADDTODO': {\n        const newTodos = state.todos        \n        const newTodo = { todo: action.value.todo }\n        newTodo.id = state.todos.reduce( (a,c) =>  a.id > c.id ? a.id : c.id , { id:0 }) + 1\n        newTodo.created_at = '作成'\n        newTodo.updated_at = '更新'\n        newTodos.push(newTodo)             \n        return { ...state, todos: newTodos }\n      }      \n      case 'UPDTODO': {\n        return console.log(action.value)\n      }\n      case 'DELTODO': {\n        return console.log(action.value)\n      }\n      case 'FETCHTODO': {\n        return { ...state, todos: action.value.todos }\n      }\n      default: {\n        return state\n      }\n    }\n  }\n  \n  export default reducer"]},"metadata":{},"sourceType":"module"}