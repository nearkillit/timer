{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/authentication_view.js\",\n    _s = $RefreshSig$();\n\nimport * as api from \"../api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport Actions from '../modules/actions'; // mui\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; // mui icon\n\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport BookIcon from '@material-ui/icons/Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AuthenticationView() {\n  _s();\n\n  const state = useSelector(state => state);\n  const user = useSelector(state => state.user);\n  const user_name = useSelector(state => state.username);\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const logState = () => {\n    console.log(state);\n  };\n\n  const inputUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const inputPassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const login = () => {\n    api.fetchTimer({\n      username,\n      password\n    }).then(r => {\n      dispatch(Actions.fetchUser({\n        username,\n        password,\n        user: 0\n      }));\n      dispatch(Actions.fetchTimer({\n        data: r.data.token\n      }));\n    });\n  };\n\n  const logout = () => {\n    dispatch(Actions.deleteUser());\n  };\n\n  const user_register = () => {\n    const data = {\n      username,\n      password\n    };\n    api.signup(data).then(r => {\n      dispatch(Actions.fetchUser({\n        username,\n        password,\n        user: r.data.user\n      }));\n    }).catch(err => console.log(err));\n  };\n\n  const timerSave = () => {\n    const data = {\n      user: state.user,\n      username: state.username,\n      password: state.password,\n      timers: state.timers.map(t => {\n        let newId = t.id;\n        if (t.instanceId) newId = t.instanceId;\n        return {\n          id: newId,\n          timer_name: t.name,\n          interval: t.interval\n        };\n      })\n    };\n    const data_json = JSON.stringify(data);\n    api.putTimer(data).then(r => {\n      alert('保存しました。');\n      console.log(r);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [user !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u3088\\u3046\\u3053\\u305D\", user_name, \"\\u3055\\u3093\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: logout,\n          children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: timerSave,\n          children: [/*#__PURE__*/_jsxDEV(BackupIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), \"\\u30C7\\u30FC\\u30BF\\u3092\\u4FDD\\u5B58\\u3059\\u308B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: inputUsername,\n          label: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: inputPassword,\n          label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: login,\n          children: [/*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), \"\\u30ED\\u30B0\\u30A4\\u30F3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: user_register,\n          children: [/*#__PURE__*/_jsxDEV(BookIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), \"\\u65B0\\u898F\\u767B\\u9332\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: logState,\n        children: \"state log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(AuthenticationView, \"5NURl51BkPsJCTgPvHBkoWbasm8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AuthenticationView;\nexport default AuthenticationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/authentication_view.js"],"names":["api","useSelector","useDispatch","useState","Actions","Button","TextField","LockOpenIcon","LockIcon","BackupIcon","PublishIcon","BookIcon","AuthenticationView","state","user","user_name","username","dispatch","setUsername","password","setPassword","logState","console","log","inputUsername","e","target","value","inputPassword","login","fetchTimer","then","r","fetchUser","data","token","logout","deleteUser","user_register","signup","catch","err","timerSave","timers","map","t","newId","id","instanceId","timer_name","name","interval","data_json","JSON","stringify","putTimer","alert"],"mappings":"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","sourcesContent":["import * as api from \"../api\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\"\nimport Actions from '../modules/actions'\n\n// mui\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n// mui icon\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport BookIcon from '@material-ui/icons/Book';\n\nfunction AuthenticationView(){\n  const state = useSelector(state => state)\n  const user = useSelector(state => state.user)\n  const user_name = useSelector(state => state.username)\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const logState = () => {\n    console.log(state);\n  }\n\n  const inputUsername = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const inputPassword = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const login = () => {\n    api\n      .fetchTimer({ username, password })\n      .then( r => {\n        dispatch(Actions.fetchUser({username, password, user:0}))\n        dispatch(Actions.fetchTimer({data: r.data.token}))\n      })\n  }\n\n  const logout = () => {\n    dispatch(Actions.deleteUser())\n  }\n\n  const user_register = () => {\n    const data = {username, password}\n    api\n      .signup(data)\n      .then( r => {      \n        dispatch(Actions.fetchUser({username, password, user:r.data.user}))\n      })\n      .catch( err => \n        console.log(err)\n      )             \n  }\n\n  const timerSave = () => {\n    const data = { user:state.user,\n                   username:state.username,\n                   password:state.password,\n                   timers:state.timers.map(t => {\n                        let newId = t.id\n                        if(t.instanceId) newId = t.instanceId\n                        return{ id:newId, timer_name:t.name, interval:t.interval }})\n                 }\n    const data_json = JSON.stringify(data)\n        \n    api\n      .putTimer(data)\n      .then( r => {\n        alert('保存しました。')\n        console.log(r);\n      })\n      .catch( err => \n        console.log(err)\n      )\n  }\n\n    return(\n        <>\n          <span>            \n            {user !== 0 ? \n              <>\n              <span>ようこそ{user_name}さん</span>              \n              <Button onClick={logout}>\n                <LockIcon />ログアウト\n              </Button>\n              <Button onClick={timerSave}>\n                <BackupIcon />データを保存する\n              </Button>\n              {/* <Button>\n                <PublishIcon />データを取得する\n              </Button>               */}\n              </>\n              :\n              <>\n              <TextField onChange={inputUsername} label=\"ユーザー名\" />\n              <TextField onChange={inputPassword} label=\"パスワード\" />\n              <Button onClick={login}>\n                <LockOpenIcon />ログイン\n              </Button>\n              <Button onClick={user_register}>\n                <BookIcon />新規登録\n              </Button>\n              </>\n            }\n            <Button onClick={logState}>\n              state log\n            </Button>  \n          </span>\n        </> \n    )\n\n}\n\nexport default AuthenticationView\n"]},"metadata":{},"sourceType":"module"}