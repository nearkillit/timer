{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // component\n\nimport Timer from './timer'; // mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  waitTime: {\n    color: '#AAA',\n    backgroundColor: '#CCC',\n    transition: '1s'\n  },\n  startTime: {}\n});\n\nfunction TimerView(props) {\n  _s();\n\n  const classes = useStyles();\n  const state = useSelector(state => state);\n  const [start, setStart] = useState(0);\n  const getTimer = props.timer;\n\n  const timerStart = () => {};\n\n  const timerStop = () => {};\n\n  const timerRestart = () => {};\n\n  const timerReset = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [getTimer.interval.map((t, i) => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.waitTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      children: [\"\\u3042\\u3068\", getTimer.loop, \"\\u5468\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), start !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30B9\\u30C8\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimerView, \"dtFcATgiDD3awjQVkJbggjb5QSA=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TimerView;\nexport default TimerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js"],"names":["useParams","useSelector","useDispatch","useEffect","useState","makeStyles","Timer","Grid","Typography","Button","useStyles","root","textAlign","cardContents","waitTime","color","backgroundColor","transition","startTime","TimerView","props","classes","state","start","setStart","getTimer","timer","timerStart","timerStop","timerRestart","timerReset","interval","map","t","i","loop"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GADmB;AAIzBC,EAAAA,YAAY,EAAE;AACZD,IAAAA,SAAS,EAAE;AADC,GAJW;AAOzBE,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,eAAe,EAAE,MAFX;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAPe;AAYzBC,EAAAA,SAAS,EAAE;AAZc,CAAD,CAA5B;;AAiBA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACrB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,KAAK,GAAGrB,WAAW,CAACqB,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMqB,QAAQ,GAAGL,KAAK,CAACM,KAAvB;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,sBACI;AAAA,eACGL,QAAQ,CAACM,QAAT,CAAkBC,GAAlB,CAAsB,CAACC,CAAD,EAAGC,CAAH,kBACrB,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAgD,MAAA,SAAS,EAAEb,OAAO,CAACP,QAAnE;AAAA,gBACGmB;AADH,OAA6CC,CAA7C;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAME,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA,iCACKT,QAAQ,CAACU,IADd;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASGZ,KAAK,KAAK,CAAV,gBACC;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA7CQJ,S;UACWT,S,EACFT,W;;;KAFTkB,S;AA+CT,eAAeA,SAAf","sourcesContent":["// react\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// component\nimport Timer from './timer'\n\n// mui\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',      \n    },\n    waitTime: {\n        color: '#AAA',\n        backgroundColor: '#CCC',\n        transition: '1s'\n    },\n    startTime: {\n        \n    },\n  });\n\nfunction TimerView(props){\n    const classes = useStyles();    \n    const state = useSelector(state => state)\n    const [start, setStart] = useState(0)\n    const getTimer = props.timer\n\n    const timerStart = () => {\n        \n    }\n\n    const timerStop = () => {\n        \n    }\n\n    const timerRestart = () => {\n        \n    }\n\n    const timerReset = () => {\n        \n    }\n\n    return (\n        <div>\n          {getTimer.interval.map((t,i) => (\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.waitTime}>\n              {t}    \n            </Typography>\n          ))}          \n          <Typography variant=\"h5\" component=\"h5\" >\n            あと{getTimer.loop}周\n          </Typography>\n          {start !== 0 ?                  \n            <div>\n              <Button>ストップ</Button>\n              <Button>リスタート</Button>\n              <Button>リセット</Button>\n            </div>     \n            :\n            <div>\n              <Button>スタート</Button>\n            </div>                   \n          }                    \n        </div>    \n    )\n}\n\nexport default TimerView"]},"metadata":{},"sourceType":"module"}