{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js\",\n    _s = $RefreshSig$();\n\n// react\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // component\n\nimport Timer from './timer'; // mui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  },\n  waitTime: {\n    color: '#AAA',\n    backgroundColor: '#CCC',\n    transition: '1s'\n  },\n  startTime: {\n    transition: '1s'\n  }\n});\n\nfunction TimerView(props) {\n  _s();\n\n  const classes = useStyles();\n  const state = useSelector(state => state);\n  const [start, setStart] = useState(0);\n  const [timeCountDown, setTimeCountDown] = useState('');\n  const getTimer = props.timer;\n  const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat());\n  const intervalTimerOrigin = getTimer.interval.concat();\n  let countDownTimer;\n\n  const timerStart = () => {\n    setStart(start + 1);\n    timerCountDown();\n  };\n\n  const timerStop = () => {\n    console.log('stop');\n    clearInterval(timeCountDown);\n  };\n\n  const timerRestart = () => {};\n\n  const timerReset = () => {};\n\n  const countDown = () => {\n    const newInterval = intervalTimer.concat();\n    intervalTimer[start] -= 1;\n    setIntervalTimer(newInterval);\n  };\n\n  const timerCountDown = () => {\n    if (intervalTimer[start] < 1) {\n      setStart(start + 1);\n    }\n\n    countDown();\n    countDownTimer = setInterval(() => {\n      countDown();\n    }, 1000);\n    setTimeCountDown(countDownTimer);\n  };\n\n  useEffect(() => {\n    if (start > intervalTimer.length) {\n      setStart(1);\n    }\n  }, [start]);\n  useEffect(() => {\n    if (intervalTimer[start] < 0) {\n      setIntervalTimer(intervalTimerOrigin);\n      setStart(start + 1);\n    }\n  }, [intervalTimer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [intervalTimer.map((t, i) => i + 1 === start ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.startTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      className: classes.waitTime,\n      children: t\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      children: [\"\\u3042\\u3068\", getTimer.loop, \"\\u5468\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this), start !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStop,\n        children: \"\\u30B9\\u30C8\\u30C3\\u30D7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => console.log(start),\n        children: \"\\u30EA\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: timerStart,\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimerView, \"mW1xrbLD0NjK33pQ8nyBOy1hVoU=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TimerView;\nexport default TimerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerView\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer_view.js"],"names":["useParams","useSelector","useDispatch","useEffect","useState","makeStyles","Timer","Grid","Typography","Button","useStyles","root","textAlign","cardContents","waitTime","color","backgroundColor","transition","startTime","TimerView","props","classes","state","start","setStart","timeCountDown","setTimeCountDown","getTimer","timer","intervalTimer","setIntervalTimer","interval","concat","intervalTimerOrigin","countDownTimer","timerStart","timerCountDown","timerStop","console","log","clearInterval","timerRestart","timerReset","countDown","newInterval","setInterval","length","map","t","i","loop"],"mappings":"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","sourcesContent":["// react\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n// component\nimport Timer from './timer'\n\n// mui\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',      \n    },\n    waitTime: {\n        color: '#AAA',\n        backgroundColor: '#CCC',\n        transition: '1s'\n    },\n    startTime: {\n        transition: '1s'\n    },\n  });\n\nfunction TimerView(props){\n    const classes = useStyles();    \n    const state = useSelector(state => state)\n    const [start, setStart] = useState(0)\n    const [timeCountDown, setTimeCountDown] = useState('')    \n    const getTimer = props.timer\n    const [intervalTimer, setIntervalTimer] = useState(getTimer.interval.concat())\n    const intervalTimerOrigin = getTimer.interval.concat()\n    let countDownTimer\n\n    const timerStart = () => {\n      setStart(start + 1)\n      timerCountDown()      \n    }\n\n    const timerStop = () => {\n        console.log('stop');        \n        clearInterval(timeCountDown)\n    }\n\n    const timerRestart = () => {\n        \n    }\n\n    const timerReset = () => {\n        \n    }\n\n    const countDown = () => {\n      const newInterval = intervalTimer.concat()\n      intervalTimer[start] -= 1\n      setIntervalTimer(newInterval)\n    }\n\n    const timerCountDown = () => {\n      if(intervalTimer[start] < 1){\n        setStart(start + 1)\n      }            \n\n      countDown()\n      countDownTimer = setInterval(() => {                \n        countDown()\n      }, 1000)\n\n      setTimeCountDown(countDownTimer)\n            \n    }    \n\n    useEffect(()=>{      \n      if(start > intervalTimer.length){\n        setStart(1)\n      }      \n    },[start])\n\n    useEffect(()=>{\n      if(intervalTimer[start] < 0){\n          setIntervalTimer(intervalTimerOrigin)\n          setStart(start + 1)\n      }      \n    },[intervalTimer])\n\n    return (\n        <div>\n          {intervalTimer.map((t,i) => \n            (i+1) === start ?\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.startTime}>\n              {t}\n            </Typography>\n            :\n            <Typography variant=\"h1\" component=\"h1\" key={i} className={classes.waitTime}>\n              {t}\n            </Typography>\n            )}          \n          <Typography variant=\"h5\" component=\"h5\" >\n            あと{getTimer.loop}周\n          </Typography>\n          {start !== 0 ?                  \n            <div>\n              <Button onClick={timerStop}>ストップ</Button>\n              <Button onClick={()=>console.log(start)}>リスタート</Button>\n              <Button>リセット</Button>\n            </div>     \n            :\n            <div>\n              <Button onClick={timerStart}>スタート</Button>\n            </div>                   \n          }                    \n        </div>    \n    )\n}\n\nexport default TimerView"]},"metadata":{},"sourceType":"module"}