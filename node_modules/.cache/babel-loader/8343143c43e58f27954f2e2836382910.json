{"ast":null,"code":"// 初期State\nconst initialState = {\n  users: {\n    uid: 0,\n    timers: [{\n      id: 0,\n      name: '筋トレ',\n      interval: [40, 20, 10]\n    }]\n  },\n  instanceTimer: []\n};\nconst initialTimer = {\n  id: 100,\n  name: '',\n  interval: []\n}; // Reducer処理\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADDTIMER':\n      {\n        const newTimer = Object.assign({}, initialTimer);\n        newTimer.name = action.value.timerName;\n        console.log(action);\n        const newTimers = state.users.timers;\n        newTimers.push(newTimer);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'DELTODO':\n      {\n        return console.log(action.value);\n      }\n\n    case 'FETCHTODO':\n      {\n        return state;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/modules/reducer.js"],"names":["initialState","users","uid","timers","id","name","interval","instanceTimer","initialTimer","reducer","state","action","type","newTimer","Object","assign","value","timerName","console","log","newTimers","push"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EACH;AACEC,IAAAA,GAAG,EAAC,CADN;AAEEC,IAAAA,MAAM,EAAC,CACL;AACEC,MAAAA,EAAE,EAAC,CADL;AAEEC,MAAAA,IAAI,EAAC,KAFP;AAGEC,MAAAA,QAAQ,EAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP;AAHX,KADK;AAFT,GAFe;AAajBC,EAAAA,aAAa,EAAC;AAbG,CAArB;AAkBA,MAAMC,YAAY,GAAG;AACTJ,EAAAA,EAAE,EAAC,GADM;AAETC,EAAAA,IAAI,EAAC,EAFI;AAGTC,EAAAA,QAAQ,EAAC;AAHA,CAArB,C,CAME;;AACA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,cAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,YAAjB,CAAjB;AACAK,QAAAA,QAAQ,CAACR,IAAT,GAAgBM,MAAM,CAACK,KAAP,CAAaC,SAA7B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,cAAMS,SAAS,GAAGV,KAAK,CAACT,KAAN,CAAYE,MAA9B;AACAiB,QAAAA,SAAS,CAACC,IAAV,CAAeR,QAAf;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYP,UAAAA,MAAM,EAAEiB;AAApB,SAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,eAAOF,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACK,KAAnB,CAAP;AACD;;AACD,SAAK,SAAL;AAAgB;AACd,eAAOE,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACK,KAAnB,CAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAON,KAAP;AACD;;AACD;AAAS;AACP,eAAOA,KAAP;AACD;AApBH;AAsBD,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["// 初期State\nconst initialState = {\n    users:\n      { \n        uid:0,        \n        timers:[\n          {\n            id:0,\n            name:'筋トレ',            \n            interval:[40,20,10]\n          }\n        ]\n      }\n    ,\n    instanceTimer:[\n\n    ]\n  }\n\nconst initialTimer = { \n            id:100,\n            name:'',            \n            interval:[]        \n          }\n\n  // Reducer処理\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADDTIMER': {\n        const newTimer = Object.assign({},initialTimer)\n        newTimer.name = action.value.timerName\n        console.log(action);\n        const newTimers = state.users.timers\n        newTimers.push(newTimer)        \n        return { ...state, timers: newTimers }\n      }      \n      case 'UPDTODO': {\n        return console.log(action.value)\n      }\n      case 'DELTODO': {\n        return console.log(action.value)\n      }\n      case 'FETCHTODO': {\n        return state\n      }\n      default: {\n        return state\n      }\n    }\n  }\n  \n  export default reducer"]},"metadata":{},"sourceType":"module"}