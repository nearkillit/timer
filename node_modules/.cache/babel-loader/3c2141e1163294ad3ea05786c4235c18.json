{"ast":null,"code":"// 初期State\nconst initialState = {\n  user: 0,\n  username: '',\n  pasword: '',\n  timers: [{\n    id: 0,\n    name: '筋トレ',\n    interval: [3, 3, 3],\n    loop: 0\n  }],\n  timerStopFlag: true\n}; // Reducer処理\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_TIMER':\n      {\n        const timers = action.value.data.timers.map(t => {\n          return { ...t,\n            loop: 0\n          };\n        });\n        console.log(timers);\n        return { ...state,\n          user: action.value.data.userid,\n          timers\n        };\n      }\n\n    case 'ADD_TIMER':\n      {\n        const initialTimer = {\n          id: 0,\n          name: '',\n          interval: [],\n          loop: 5\n        };\n        const newTimer = Object.assign({}, initialTimer);\n        const newTimers = state.timers;\n        newTimer.name = action.value.timerName; // idの付与\n\n        newTimer.id = newTimers.reduce((p, c) => p > c.id ? p : c.id, 0) + 1;\n        newTimers.push(newTimer);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'DELETE_TIMER':\n      {\n        const newTimers = state.timers.filter(t => t.id !== action.value.timersId);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'ADD_INTERVAL_TIMER':\n      {\n        const getTimers = state.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.interval.push(5);\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDATE_INTERVAL_TIMER':\n      {\n        const getTimers = state.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.interval[action.value.index] = action.value.intervalTime * 1;\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'DELETE_INTERVAL_TIMER':\n      {\n        const getTimers = state.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.interval.splice(action.value.index, 1);\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDATE_LOOP':\n      {\n        const getTimers = state.timers;\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0];\n        getTimer.loop = action.value.loop * 1;\n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t);\n        return { ...state,\n          timers: newTimers\n        };\n      }\n\n    case 'UPDATE_TIMER_STOP_FLAG':\n      {\n        return { ...state,\n          timerStopFlag: action.value\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/modules/reducer.js"],"names":["initialState","user","username","pasword","timers","id","name","interval","loop","timerStopFlag","reducer","state","action","type","value","data","map","t","console","log","userid","initialTimer","newTimer","Object","assign","newTimers","timerName","reduce","p","c","push","filter","timersId","getTimers","getTimer","index","intervalTime","splice"],"mappings":"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","sourcesContent":["// 初期State\nconst initialState = {    \n        user:0,\n        username:'',\n        pasword:'',\n        timers:[\n          {\n            id:0,\n            name:'筋トレ',\n            interval:[3,3,3],\n            loop:0\n          }\n        ],\n        timerStopFlag: true,             \n  }\n\n  // Reducer処理\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'FETCH_TIMER': {        \n        const timers = action.value.data.timers.map( t  => { return { ...t, loop:0 } })\n        console.log(timers);\n        return {...state, user:action.value.data.userid, timers }\n      }\n      case 'ADD_TIMER': {\n        const initialTimer = { \n          id:0,\n          name:'',            \n          interval:[],\n          loop:5\n        }\n        const newTimer = Object.assign({},initialTimer)\n        const newTimers = state.timers\n        newTimer.name = action.value.timerName  \n        // idの付与\n        newTimer.id = newTimers.reduce((p,c) => p > c.id ? p : c.id , 0) + 1\n        newTimers.push(newTimer)             \n        return { ...state, timers: newTimers }\n      }\n      case 'DELETE_TIMER': {        \n        const newTimers = state.timers.filter(t => t.id !== action.value.timersId)\n        return { ...state, timers: newTimers }\n      }\n      case 'ADD_INTERVAL_TIMER': {        \n        const getTimers = state.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]        \n        getTimer.interval.push(5)        \n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)\n        return { ...state, timers: newTimers }\n      }\n      case 'UPDATE_INTERVAL_TIMER': {\n        const getTimers = state.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]\n        getTimer.interval[action.value.index] = action.value.intervalTime * 1        \n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)        \n        return { ...state, timers: newTimers }\n      }\n      case 'DELETE_INTERVAL_TIMER': {        \n        const getTimers = state.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]\n        getTimer.interval.splice(action.value.index, 1)        \n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)        \n        return { ...state, timers: newTimers }\n      }\n      case 'UPDATE_LOOP': {\n        const getTimers = state.timers\n        const getTimer = getTimers.filter(t => t.id === action.value.timersId)[0]        \n        getTimer.loop = action.value.loop * 1        \n        const newTimers = getTimers.map(t => t.id === action.value.timersId ? getTimer : t)        \n        return { ...state, timers: newTimers }\n      }\n      case 'UPDATE_TIMER_STOP_FLAG': {\n        return { ...state, timerStopFlag: action.value}\n      }\n      default: {\n        return state\n      }\n    }\n  }\n  \n  export default reducer"]},"metadata":{},"sourceType":"module"}