{"ast":null,"code":"var _jsxFileName = \"/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js\",\n    _s = $RefreshSig$();\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center'\n  },\n  cardContents: {\n    textAlign: 'center'\n  }\n});\n\nfunction Timer(props) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const inputIntervalTime = event => {\n    console.log(event.target.value); // console.log(event.target.name);\n\n    const intervalTime = event.target.value.replace(/\\D/g, '');\n    dispatch(Actions.updateIntervalTimer({\n      intervalTime\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cardContents,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h5\",\n        children: props.timer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.timer.interval.map((t, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: t,\n                onChange: inputIntervalTime,\n                name: i,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: \"\\u79D2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 29\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/kiritoshimura/Desktop/intervaltimer/frontend/src/components/timer.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","InputAdornment","Card","CardActions","CardContent","makeStyles","Typography","TextField","Button","useSelector","useDispatch","Actions","useStyles","root","textAlign","cardContents","Timer","props","classes","dispatch","inputIntervalTime","event","console","log","target","value","intervalTime","replace","updateIntervalTimer","timer","name","interval","map","t","i","endAdornment"],"mappings":"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","sourcesContent":["import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Actions from '../modules/actions'\n\nconst useStyles = makeStyles({\n    root: {    \n      textAlign: 'center'\n    },\n    cardContents: {\n      textAlign: 'center',    \n    }\n  });\n\nfunction Timer (props){\n    const classes = useStyles();    \n    const dispatch = useDispatch();\n\n    const inputIntervalTime = (event) => {\n      console.log(event.target.value);\n      // console.log(event.target.name);\n      const intervalTime = event.target.value.replace(/\\D/g, '');\n      dispatch(Actions.updateIntervalTimer({intervalTime}))\n    }\n\n    return (\n        <Card className={classes.cardContents}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h5\">\n                {props.timer.name}\n              </Typography>\n              <Table>\n                <TableBody>\n                  {props.timer.interval.map((t,i) => (\n                    <TableRow key={i}>\n                      <TableCell>{i}</TableCell>\n                      <TableCell>\n                        <TextField value={t} onChange={inputIntervalTime} name={i}\n                          InputProps={{\n                            endAdornment: \n                            <InputAdornment position=\"end\">秒</InputAdornment>\n                        }}/>\n                      </TableCell>\n                  </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              <Button>スタート</Button>\n            </CardContent>\n          </Card>          \n        )\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}